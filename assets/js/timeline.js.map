{"version":3,"file":"timeline.js","sources":["../../../src/pages/timeline.vue"],"sourcesContent":["<script lang=\"ts\" setup>\r\nimport Swal from \"sweetalert2\";\r\nimport \"@sweetalert2/theme-bootstrap-4/bootstrap-4.scss\";\r\nimport { useTimelineStore, parseTimeline } from \"@/store/timeline\";\r\nimport { ITimeline, ITimelineCondition, ITimelineLine, ShowStyle, TimelineConfigValues } from \"@/types/timeline\";\r\n\r\nconst timelineStore = useTimelineStore();\r\nconst timelinePageData = reactive({\r\n  loadedTimeline: [] as ITimelineLine[], //显示在页面上的时间轴\r\n  optionalTimeline: [] as ITimeline[], //有多个供选择的时间轴\r\n});\r\nconst baseTimeMs = ref(0); //战斗开始时间 每场战斗中这个值应该是固定的\r\nconst runtimeTimeSeconds = ref(0 - timelineStore.configValues.preBattle); //当前进行到多少秒了 相对与baseTime来说 （战斗时间）  时间轴时间将以他为基准进行计算\r\nconst offsetTimeMS = ref(0); //sync产生的时间轴偏移 会在baseTimeMs后附加 以影响runtimeTime\r\n// let runtimeTimer: NodeJS.Timer; //计时器用以循环刷新界面\r\nlet doTTS = false; //防止tts重复\r\n// let ttsSuppressMs = 300; // tts重复阈值\r\n//每次get时间轴时被传入的条件对象\r\nconst condition = useStorage(\"timeline-condition\", {\r\n  zoneId: \"0\",\r\n  job: \"NONE\",\r\n} as ITimelineCondition);\r\nconst devMode = ref(window.location.href.match(/localhost/) || new URLSearchParams(location.hash.split(\"?\")[1]).get(\"dev\") === \"1\");\r\n//保存最后一次选择的时间轴，用于团灭时重新加载\r\n// let lastUsedTimeline: ITimeline;\r\n\r\nconst syncLines = computed(() => timelinePageData.loadedTimeline.filter((item) => item.sync));\r\nconst loadedTimelineTTS = computed(() => timelinePageData.loadedTimeline.filter((v) => v.tts));\r\ninit();\r\n\r\n//页面初始化\r\nfunction init() {\r\n  addOverlayListener(\"onLogEvent\", handleLogEvent);\r\n  addOverlayListener(\"onPlayerChangedEvent\", handlePlayerChangedEvent);\r\n  addOverlayListener(\"ChangeZone\", handleChangeZone);\r\n  addOverlayListener(\"BroadcastMessage\", handleBroadcastMessage);\r\n  addOverlayListener(\"onInCombatChangedEvent\", handleInCombatChanged);\r\n  startOverlayEvents();\r\n  timelineStore.loadTimelineSettings();\r\n  if (!Swal.isVisible()) {\r\n    Swal.fire({\r\n      text: `${timelineStore.allTimelines.length}条时间轴已就绪`,\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n      backdrop: false,\r\n    });\r\n  }\r\n  getTimeline(condition.value);\r\n}\r\nfunction openSettings() {\r\n  const windowsOpen = window.open(\"/ff14-overlay-vue/#/timelineSettings?timestamp=\" + new Date().getTime(), \"_blank\", \"width=1200,height=800\");\r\n  const loop = setInterval(function () {\r\n    if (windowsOpen?.closed) {\r\n      clearInterval(loop);\r\n      timelineStore.loadTimelineSettings();\r\n      getTimeline(condition.value);\r\n    }\r\n  }, 500);\r\n}\r\n\r\n//从数据列表中根据玩家职业与地区获得一个或多个时间轴\r\nfunction getTimeline(condition: ITimelineCondition) {\r\n  stopTimeline();\r\n  timelinePageData.loadedTimeline.length = 0;\r\n  timelinePageData.optionalTimeline.length = 0;\r\n  let candidate: ITimeline[] = timelineStore.getTimeline(condition);\r\n  if (candidate.length === 1) {\r\n    //单个结果\r\n    mountTimeline(candidate[0]);\r\n  } else if (candidate.length > 1) {\r\n    //多个结果\r\n    timelinePageData.optionalTimeline = candidate;\r\n  }\r\n}\r\n\r\n//用户选择了某个时间轴\r\nfunction selectedTimeline(timeline: ITimeline) {\r\n  mountTimeline(timeline);\r\n}\r\n\r\n//载入时间轴页面\r\nasync function mountTimeline(timeline: ITimeline, stopLoadedTimeline: boolean = true) {\r\n  stopLoadedTimeline && stopTimeline();\r\n  doTTS = false;\r\n  if (timeline && timeline?.timeline) {\r\n    timelinePageData.loadedTimeline = await parseTimeline(timeline.timeline);\r\n    timelinePageData.loadedTimeline.sort((a, b) => a.time - b.time);\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: `加载了${timeline.name}~`,\r\n      showConfirmButton: false,\r\n      timer: 1000,\r\n      backdrop: false,\r\n    });\r\n    // lastUsedTimeline = timeline;\r\n  }\r\n  setTimeout(() => (doTTS = true), 1000);\r\n}\r\n\r\n//停止当前\r\nfunction stopTimeline() {\r\n  // clearInterval(Number(runtimeTimer));\r\n  baseTimeMs.value = 0;\r\n  runtimeTimeSeconds.value = 0 - timelineStore.configValues.preBattle;\r\n  offsetTimeMS.value = 0;\r\n  timelinePageData.loadedTimeline.map((v) => (v.alertAlready = false));\r\n}\r\n\r\n//页面时间轴开始播放\r\nfunction startTimeline(countdownSeconds: number, preventTTS = true) {\r\n  if (preventTTS) {\r\n    doTTS = false;\r\n    setTimeout(() => (doTTS = true), 1000);\r\n  }\r\n  runtimeTimeSeconds.value = 0;\r\n  offsetTimeMS.value = 0;\r\n  baseTimeMs.value = new Date().getTime() + countdownSeconds * 1000;\r\n  loadedTimelineTTS.value.map((v) => (v.alertAlready = false));\r\n  play();\r\n}\r\n\r\nfunction play() {\r\n  if (baseTimeMs.value === 0) return;\r\n  runtimeTimeSeconds.value = (new Date().getTime() - baseTimeMs.value + offsetTimeMS.value) / 1000;\r\n  const l = loadedTimelineTTS.value.find((v) => !v.alertAlready && v.time - timelineStore.configValues.ttsAdvance <= runtimeTimeSeconds.value);\r\n  if (l) {\r\n    l.alertAlready = true;\r\n    cactbotSay(l.tts!);\r\n  }\r\n  requestAnimationFrame(play);\r\n}\r\n//日志\r\nfunction handleLogEvent(e: { detail: { logs: string[] } }) {\r\n  for (const log of e.detail.logs) {\r\n    let regex = log.match(/^.{14} \\w+ 00:(?:00b9|0[12]39)::?(?:距离战斗开始还有|Battle commencing in |戦闘開始まで)(?<cd>\\d+)[^（(]+[（(]/i);\r\n    if (regex) {\r\n      //倒计时\r\n      startTimeline(parseInt(regex!.groups!.cd));\r\n    } else if (/^.{14} Director 21:.{8}:4000000F/.test(log) || /^.{14} ChatLog 00:0038::end$/.test(log) || /^.{14} SystemLogMessage 29:.{8}:B1C:/.test(log)) {\r\n      //团灭\r\n      stopTimeline();\r\n      // mountTimeline(lastUsedTimeline);\r\n    } else {\r\n      //是否触发了某行的sync\r\n      const timelineSync = syncLines.value.find((item) => {\r\n        // console.log(item.sync, log);\r\n        return (\r\n          item.sync!.test(log) && runtimeTimeSeconds.value >= item.time - item.windowBefore && runtimeTimeSeconds.value <= item.time + Number(item.windowAfter)\r\n        );\r\n      });\r\n      //如果匹配sync则同步到time，有jump则同步至jump\r\n      if (timelineSync) syncTimeline(timelineSync.jump || timelineSync.time);\r\n    }\r\n    if (/^.{14} ChatLog 00:0038::/.test(log)) {\r\n      //echo\r\n      const name = log.match(/^.{14} ChatLog 00:0038::(?<name>.+)$/)?.groups?.name;\r\n      if (name) {\r\n        const timeline = timelineStore.getTimeline(condition.value).find((c) => c.name === name);\r\n        timeline && mountTimeline(timeline, false);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//测试用\r\nfunction fakeJump(time: number) {\r\n  syncTimeline(time);\r\n}\r\n\r\n//同步页面时间轴\r\nfunction syncTimeline(targetTime: number) {\r\n  if (baseTimeMs.value === 0) startTimeline(0, false);\r\n  offsetTimeMS.value += (targetTime - runtimeTimeSeconds.value) * 1000;\r\n  loadedTimelineTTS.value.map((v) => {\r\n    if (v.time < targetTime) v.alertAlready = true;\r\n  });\r\n}\r\n\r\n//玩家状态（职业）\r\nfunction handlePlayerChangedEvent(e: any) {\r\n  if (e.detail.job !== condition.value.job) {\r\n    condition.value.job = e.detail.job;\r\n    getTimeline(condition.value);\r\n  } else {\r\n    condition.value.job = e.detail.job;\r\n  }\r\n}\r\n\r\n//切换场景\r\nfunction handleChangeZone(e: any) {\r\n  condition.value.zoneId = String(e.zoneID);\r\n  // lastUsedTimeline = { name: \"\", condition: { zoneId: \"\", job: \"NONE\" }, timeline: \"\", codeFight: \"\", create: \"\" };\r\n  getTimeline(condition.value);\r\n}\r\n\r\n//调用TTS\r\nfunction cactbotSay(text: string, force: boolean = false) {\r\n  if (!text) return;\r\n  if (doTTS || force) callOverlayHandler({ call: \"cactbotSay\", text: text });\r\n}\r\n\r\n//接受广播\r\nfunction handleBroadcastMessage(e: {\r\n  type: string;\r\n  source: string;\r\n  msg: {\r\n    store: {\r\n      allTimelines: ITimeline[];\r\n      configValues: TimelineConfigValues;\r\n      showStyle: ShowStyle;\r\n    };\r\n  };\r\n}) {\r\n  if (e.source === \"soumuaTimelineSetting\" && e.msg.store) {\r\n    Swal.fire({\r\n      text: `接受到${e.msg.store.allTimelines.length}个时间轴`,\r\n      showDenyButton: true,\r\n      denyButtonText: \"覆盖\",\r\n      showConfirmButton: true,\r\n      confirmButtonText: \"追加\",\r\n      showCancelButton: true,\r\n      cancelButtonText: \"放弃\",\r\n      backdrop: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed || result.isDenied) {\r\n        if (result.isDenied) timelineStore.allTimelines.length = 0;\r\n        timelineStore.allTimelines = e.msg.store.allTimelines;\r\n        timelineStore.configValues = e.msg.store.configValues;\r\n        timelineStore.showStyle = e.msg.store.showStyle;\r\n        timelineStore.saveTimelineSettings();\r\n        Swal.fire(\"接受成功\");\r\n        getTimeline(condition.value); //获取新数据之后查询一次\r\n      }\r\n    });\r\n  }\r\n}\r\nfunction handleInCombatChanged(ev: {\r\n  type: \"onInCombatChangedEvent\";\r\n  detail: {\r\n    inGameCombat: boolean;\r\n    inACTCombat: boolean;\r\n  };\r\n}) {\r\n  if (ev.detail.inGameCombat && ev.detail.inACTCombat && baseTimeMs.value === 0) startTimeline(0);\r\n  else if (!ev.detail.inGameCombat && !ev.detail.inACTCombat) stopTimeline();\r\n}\r\n</script>\r\n<template>\r\n  <div id=\"wrapper\">\r\n    <svg\r\n      v-show=\"baseTimeMs === 0\"\r\n      @click=\"openSettings()\"\r\n      t=\"1652767124032\"\r\n      class=\"icon\"\r\n      viewBox=\"0 0 1030 1024\"\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      p-id=\"2215\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n    >\r\n      <path\r\n        d=\"M943.321212 577.163636c12.412121 18.618182 31.030303 31.030303 55.854546 37.236364 6.206061 0 12.412121 6.206061 12.412121 6.206061 6.206061 6.206061 18.618182 18.618182 18.618182 31.030303v24.824242c-6.206061 24.824242-12.412121 43.442424-24.824243 62.060606l-6.20606 12.412121c-6.206061 12.412121-12.412121 18.618182-24.824243 24.824243-6.206061 6.206061-18.618182 6.206061-24.824242 6.20606-6.206061 0-12.412121 0-18.618182-6.20606-18.618182-6.206061-37.236364-6.206061-55.854546-6.206061h6.206061-12.412121c-18.618182 0-31.030303 6.206061-43.442424 12.412121 0 0-12.412121 6.206061-24.824243 18.618182-12.412121 12.412121-24.824242 37.236364-24.824242 62.060606 0 18.618182 0 37.236364 12.412121 62.060606 6.206061 12.412121 6.206061 31.030303-6.206061 43.442425-12.412121 12.412121-24.824242 18.618182-37.236363 24.824242-6.206061 6.206061-37.236364 18.618182-68.266667 24.824242 37.236364-6.206061 12.412121 0-12.412121 0h-6.206061c-6.206061 0-12.412121 0-18.618182-6.20606-6.206061-6.206061-12.412121-12.412121-12.412121-24.824243v6.206061c-12.412121-31.030303-31.030303-55.854545-55.854545-68.266667 0-6.206061-24.824242-12.412121-49.648485-12.412121s-49.648485 6.206061-68.266667 24.824243c-24.824242 18.618182-43.442424 43.442424-49.648485 74.472727 0-6.206061-6.206061 0-12.412121 0 0 0-12.412121 6.206061-18.618182 6.20606-12.412121 0-18.618182 0-37.236363-6.20606-12.412121-6.206061-24.824242-6.206061-37.236364-12.412121l-37.236364-18.618182c-12.412121-6.206061-18.618182-12.412121-24.824242-24.824243-6.206061-6.206061-6.206061-12.412121-6.206061-18.618181 0-6.206061 0-18.618182 6.206061-31.030304 6.206061-6.206061 12.412121-24.824242 12.412121-49.648484s-12.412121-43.442424-31.030303-62.060606c-12.412121-12.412121-24.824242-18.618182-43.442424-24.824243h-24.824242-6.206061c-12.412121 0-31.030303 6.206061-49.648485 6.206061h-12.412121c-6.206061 0-12.412121 0-18.618182-6.206061-6.206061 0-12.412121-12.412121-24.824242-18.618182-18.618182-31.030303-31.030303-68.266667-37.236364-105.50303v-6.206061c0-18.618182 12.412121-24.824242 24.824242-31.030303 24.824242-6.206061 43.442424-24.824242 62.060606-43.442424 18.618182-6.206061 24.824242-31.030303 24.824243-55.854545s-6.206061-49.648485-24.824243-68.266667C62.060606 415.806061 31.030303 397.187879 0 390.981818c18.618182 6.206061 12.412121 0 12.412121-6.20606-6.206061-6.206061-6.206061-18.618182-6.20606-24.824243 0-6.206061 0-18.618182 6.20606-31.030303 6.206061-24.824242 18.618182-49.648485 31.030303-68.266667-12.412121 24.824242-6.206061 12.412121 0 6.206061 0-12.412121 6.206061-18.618182 12.412121-24.824242 6.206061 0 6.206061-6.206061 12.412122-6.206061s12.412121 0 18.618181 6.206061c24.824242 6.206061 49.648485 12.412121 74.472728 6.20606 24.824242 0 43.442424-12.412121 62.060606-31.030303 12.412121-12.412121 18.618182-24.824242 18.618182-43.442424 6.206061 0 6.206061-12.412121 6.20606-24.824242v-18.618182-18.618182c0-18.618182-6.206061-43.442424-12.412121-62.060606 6.206061 31.030303 0 18.618182 0 6.20606v0c12.412121-6.206061 18.618182-12.412121 31.030303-18.618181l37.236364-18.618182c12.412121-6.206061 24.824242-6.206061 37.236363-12.412121 12.412121-6.206061 24.824242-6.206061 31.030303-6.206061 12.412121 0 18.618182 0 24.824243 12.412121 6.206061 6.206061 12.412121 18.618182 12.412121 31.030303 6.206061 12.412121 18.618182 24.824242 37.236364 43.442424s37.236364 24.824242 62.060606 24.824243 49.648485-6.206061 68.266666-18.618182c24.824242-24.824242 37.236364-43.442424 43.442425-68.266667 0-6.206061 6.206061-12.412121 12.412121-18.618181 6.206061 0 12.412121-6.206061 18.618182-6.206061 12.412121 0 18.618182 0 31.030303 6.206061 12.412121 0 24.824242 6.206061 37.236363 12.412121 12.412121 6.206061 24.824242 12.412121 31.030303 18.618182 12.412121 6.206061 18.618182 18.618182 24.824243 24.824242 0 6.206061 6.206061 6.206061 6.20606 12.412121v6.206061c0 6.206061-6.206061 18.618182-6.20606 24.824242 0 6.206061-6.206061 24.824242-6.206061 37.236364v18.618182c6.206061 24.824242 12.412121 43.442424 31.030303 62.060606 18.618182 18.618182 37.236364 24.824242 62.060606 31.030303 24.824242 0 49.648485 0 68.266667-12.412121 6.206061 0 12.412121-6.206061 18.618182-6.206061h6.20606c6.206061 0 18.618182 6.206061 24.824243 12.412121 12.412121 12.412121 18.618182 24.824242 31.030303 43.442424 6.206061 18.618182 12.412121 43.442424 18.618182 62.060607 0 12.412121 0 24.824242-6.206061 31.030303-6.206061 6.206061-12.412121 12.412121-24.824242 18.618181-24.824242 6.206061-49.648485 31.030303-62.060606 55.854546-6.206061 6.206061-12.412121 24.824242-12.412122 49.648485-6.206061 24.824242 0 49.648485 18.618182 68.266666zM682.666667 341.333333c-43.442424-43.442424-105.50303-68.266667-167.563637-68.266666-31.030303 0-62.060606 6.206061-93.090909 18.618181-43.442424 18.618182-80.678788 49.648485-105.50303 86.884849-6.206061-6.206061-24.824242 37.236364-37.236364 80.678788 0-18.618182-6.206061 12.412121-6.20606 49.648485 0 31.030303 6.206061 62.060606 18.618181 93.090909 12.412121 31.030303 31.030303 55.854545 49.648485 74.472727 18.618182 24.824242 49.648485 37.236364 74.472728 49.648485 31.030303 12.412121 62.060606 18.618182 93.090909 18.618182s62.060606-6.206061 93.090909-18.618182c43.442424-18.618182 80.678788-49.648485 105.50303-86.884849-6.206061 12.412121 12.412121-12.412121 24.824243-43.442424 12.412121-31.030303 18.618182-62.060606 18.618181-93.090909s-6.206061-62.060606-18.618181-93.090909C713.69697 372.363636 682.666667 335.127273 645.430303 310.30303l37.236364 31.030303z\"\r\n        p-id=\"2216\"\r\n      ></path>\r\n    </svg>\r\n    <ul v-if=\"timelinePageData.optionalTimeline.length && runtimeTimeSeconds <= -timelineStore.configValues.preBattle\" class=\"optionalTimelines\">\r\n      <li v-for=\"(item, index) in timelinePageData.optionalTimeline\" :key=\"index\" @click=\"selectedTimeline(item)\">\r\n        {{ item.condition.job }} - {{ item.name }}\r\n      </li>\r\n    </ul>\r\n    <timeline-timeline-show\r\n      :config=\"timelineStore.configValues\"\r\n      :lines=\"timelinePageData.loadedTimeline\"\r\n      :runtime=\"runtimeTimeSeconds\"\r\n      :show-style=\"timelineStore.showStyle\"\r\n    ></timeline-timeline-show>\r\n    <button v-if=\"devMode\" @click=\"startTimeline(30)\">开始从-30</button>\r\n    <button v-if=\"devMode\" @click=\"startTimeline(0)\">开始从0</button>\r\n    <button v-if=\"devMode\" @click=\"stopTimeline()\">团灭</button>\r\n    <button v-if=\"devMode\" @click=\"fakeJump(1000)\">跳转1000测试</button>\r\n    <button v-if=\"devMode\" @click=\"cactbotSay('今天天气真不错', true)\">TTS测试</button>\r\n    <span v-if=\"devMode\" style=\"color: white; background-color: black\">{{ runtimeTimeSeconds }}</span>\r\n  </div>\r\n</template>\r\n<style lang=\"scss\">\r\n::-webkit-scrollbar {\r\n  display: none !important;\r\n}\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n* {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  user-select: none;\r\n}\r\n\r\n#wrapper {\r\n  overflow: hidden;\r\n  user-select: none;\r\n  min-height: 100px;\r\n  .icon {\r\n    background-color: rgba($color: #000000, $alpha: 0.01);\r\n    cursor: pointer;\r\n    // filter: brightness(0.8);\r\n    filter: drop-shadow(1px 2px 1px black);\r\n    fill: blueviolet;\r\n    opacity: 0.8;\r\n    transition-duration: 0.2s;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    margin: 5px;\r\n    &:hover {\r\n      opacity: 1;\r\n      transform-origin: center center;\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n  .optionalTimelines {\r\n    display: flex;\r\n    list-style: none;\r\n    flex-direction: column;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    line-height: 2em;\r\n    li {\r\n      background-color: lightblue;\r\n      margin: 2px;\r\n      padding-left: 12px;\r\n      &:hover {\r\n        cursor: pointer;\r\n        transition-duration: 0.2s;\r\n        font-size: 20px;\r\n      }\r\n    }\r\n  }\r\n  footer {\r\n    position: fixed;\r\n    bottom: 0;\r\n    right: 0;\r\n  }\r\n}\r\n</style>\r\n"],"names":["timelineStore","useTimelineStore","timelinePageData","reactive","baseTimeMs","ref","runtimeTimeSeconds","offsetTimeMS","doTTS","condition","useStorage","devMode","syncLines","computed","item","loadedTimelineTTS","v","init","handleLogEvent","handlePlayerChangedEvent","handleChangeZone","handleBroadcastMessage","handleInCombatChanged","Swal","getTimeline","openSettings","windowsOpen","loop","condition2","stopTimeline","candidate","mountTimeline","selectedTimeline","timeline","stopLoadedTimeline","parseTimeline","a","b","startTimeline","countdownSeconds","preventTTS","play","l","cactbotSay","log","regex","timelineSync","syncTimeline","name","_b","_a","c","fakeJump","time","targetTime","text","force","result","ev"],"mappings":"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"}