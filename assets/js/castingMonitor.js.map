{"version":3,"file":"castingMonitor.js","sources":["../../../src/store/castingMonitor.ts","../../../src/components/castingMonitor/main.vue","../../../src/components/castingMonitor/header.vue","../../../src/pages/castingMonitor.vue"],"sourcesContent":["import { params } from \"@/utils/queryParams\";\nimport Util from \"@/utils/util\";\nimport { getFullImgSrc, parseAction } from \"@/utils/xivapi\";\nimport { defineStore } from \"pinia\";\nconst THNSort = [\"tank\", \"healer\", \"dps\", \"crafter\", \"gatherer\", \"none\"];\nconst testActions = [\n  24283, 24284, 24285, 24286, 24287, 24288, 24289, 24290, 24294, 24295, 24296, 24297, 24298, 24299, 24300, 24301, 24302,\n  24303, 24304, 24305, 24306, 24307, 24309, 24310, 24311, 24312, 24313, 24315, 24316, 24317, 24318,\n];\nexport const useCastingMonitorStore = defineStore(\"castingMonitor\", {\n  state: () => {\n    return {\n      castData: reactive({} as Record<string, Cast[]>),\n      playerId: ref(\"\"),\n      focusTargetId: ref(\"\"),\n      partyData: [] as {\n        id: string;\n        name: string;\n        job: number;\n        inParty: boolean;\n        src: string;\n      }[],\n      config: {\n        duration: Number(params?.duration || 25),\n      },\n      lastPush: Date.now(),\n    };\n  },\n  getters: {\n    partyDataFormatted(state) {\n      return state.partyData.sort((a, b) => {\n        return (\n          THNSort.indexOf(Util.jobToRole(Util.jobEnumToJob(a.job))) -\n          THNSort.indexOf(Util.jobToRole(Util.jobEnumToJob(b.job)))\n        );\n      });\n    },\n    focusTargetCastArr(state) {\n      return state.castData?.[state.focusTargetId] ?? [];\n    },\n  },\n  actions: {\n    testAction(): void {\n      const actionId = testActions[Math.floor(Math.random() * testActions.length)];\n      this.pushAction(Date.now(), 14, \"贤者技能随机\", this.focusTargetId, actionId, 1);\n      setTimeout(() => {\n        this.pushAction(Date.now(), 15, \"贤者技能随机\", this.focusTargetId, actionId);\n      }, 1000);\n    },\n    testItem(): void {\n      this.pushAction(Date.now(), 15, \"item_11c7\", this.focusTargetId, parseInt(\"20011C7\", 16));\n    },\n    testItemHQ(): void {\n      this.pushAction(Date.now(), 15, \"item_f5407\", this.focusTargetId, parseInt(\"20F5407\", 16));\n    },\n    testParty(fakeParty: boolean): void {\n      this.handlePartyChanged({\n        party: fakeParty\n          ? [\n              { id: \"10000001\", name: \"测试张三\", job: 24, inParty: true, src: \"\" },\n              { id: \"10000002\", name: \"测试李四\", job: 25, inParty: true, src: \"\" },\n              { id: \"10000004\", name: \"测试王五\", job: 19, inParty: true, src: \"\" },\n              { id: \"10000005\", name: \"测试赵六\", job: 23, inParty: true, src: \"\" },\n              { id: \"10000006\", name: \"测试孙七\", job: 39, inParty: true, src: \"\" },\n              { id: \"10000007\", name: \"测试周八\", job: 40, inParty: true, src: \"\" },\n              { id: \"10000008\", name: \"测试吴九\", job: 37, inParty: true, src: \"\" },\n              { id: \"10000009\", name: \"测试郑十\", job: 38, inParty: true, src: \"\" },\n            ]\n          : [],\n      });\n    },\n    async pushAction(\n      time: number,\n      logLine: number,\n      abilityName: \"item\" | \"action\" | \"mount\" | string,\n      casterId: string,\n      abilityId: number,\n      cast1000Ms?: number,\n    ): Promise<void> {\n      const energySaving = /^(?:1|true|yes|on|open|enabled|undefined)$/i.test(params?.energySaving);\n      if (\n        (this.partyData.length === 0 && casterId === this.playerId) ||\n        (energySaving && casterId === this.focusTargetId) ||\n        (!energySaving && this.partyData.length > 0 && this.partyData.find((v) => v.id === casterId))\n      ) {\n        let queryType;\n        let itemIsHQ = false;\n        if (/^(?:item|mount)_/.test(abilityName)) {\n          abilityId = parseInt(abilityName.replace(/^.+_/, \"\"), 16);\n          //HQ道具 item_fXXXX （转十进制则为10XXXXXX）\n          if (abilityId > 983040) {\n            abilityId = parseInt(abilityId.toString().slice(-5), 10);\n            itemIsHQ = true;\n          }\n          queryType = abilityName.replace(/_.+$/, \"\") as \"item\" | \"mount\";\n        } else {\n          queryType = \"action\";\n        }\n        if (!this.castData[casterId]) this.castData[casterId] = [];\n        const key = Symbol();\n        this.castData[casterId].push({\n          time: time,\n          logLine: logLine,\n          src: \"\",\n          class: \"\",\n          key: key,\n          APIData: {},\n        });\n        this.lastPush = Date.now();\n        const cast = this.castData[casterId].find((v) => v.key === key)!;\n        setTimeout(() => {\n          this.castData[casterId]?.splice(this.castData[casterId].indexOf(cast), 1);\n        }, (cast1000Ms || this.config.duration) * 1000);\n        if (/^unknown_/.test(abilityName)) {\n          cast.src = \"https://cafemaker.wakingsands.com/i/000000/000405.png\";\n          cast.class = `action action-category-0`;\n        } else {\n          if (abilityId < 100000) {\n            const action = await parseAction(queryType, abilityId, [\n              \"ID\",\n              \"Icon\",\n              \"ActionCategoryTargetID\",\n              \"Name\",\n              \"Description\",\n            ]);\n            cast.APIData = action;\n            cast.src = await getFullImgSrc(action?.Icon ?? \"\", itemIsHQ);\n            if (queryType === \"action\") {\n              cast.class = `action action-category-${action?.ActionCategoryTargetID}`;\n            } else if (queryType === \"item\") {\n              cast.class = \"item\" + (itemIsHQ ? \"HQ\" : \"\");\n            } else if (queryType === \"mount\") {\n              cast.class = \"mount\";\n            }\n            if (action.ActionCategoryTargetID === 2 || action.ActionCategoryTargetID === 3) {\n              const lastCast = this.castData[casterId]\n                .filter((v) => /action-category-[23]/.test(v.class) && v.logLine !== 14)\n                .at(-2);\n              if (lastCast) {\n                cast.GCDCast = ((cast.time - lastCast.time) / 1000).toFixed(2);\n                if (parseFloat(cast.GCDCast) >= 2.55) cast.GCDClass = \"wasted\";\n              }\n            }\n          }\n        }\n      }\n    },\n    handleChangePrimaryPlayer(e: any): void {\n      this.playerId = e.charID.toString(16).toUpperCase();\n      this.focusTargetId = this.playerId;\n    },\n    handleLogLine(e: { line: string[] }): void {\n      if (e.line[0] === \"20\")\n        this.pushAction(Date.parse(e.line[1]), 14, e.line[5], e.line[2], parseInt(e.line[4], 16), Number(e.line[8]));\n      else if (e.line[0] === \"21\" || (e.line[0] === \"22\" && e.line[45] === \"0\"))\n        this.pushAction(Date.parse(e.line[1]), 15, e.line[5], e.line[2], parseInt(e.line[4], 16));\n    },\n    handlePartyChanged(e: any): void {\n      if (e.party.length > 0) {\n        this.partyData = e.party.filter((v: any) => v.inParty);\n        for (const key in this.castData) {\n          if (Object.prototype.hasOwnProperty.call(this.castData, key)) {\n            if (!this.partyData.find((v) => v.id === key)) {\n              Reflect.deleteProperty(this.castData, key);\n            }\n          }\n        }\n        if (!Object.keys(this.partyData).includes(this.focusTargetId)) {\n          // 没有之前监控的目标，重置为玩家本人。\n          this.focusTargetId = this.playerId;\n        }\n      } else {\n        // 没有队伍，重置为玩家本人。\n        this.focusTargetId = this.playerId;\n        // 清空队伍数据\n        this.partyData.length = 0;\n      }\n    },\n    handleClickChangeTarget(targetId: string): void {\n      if (targetId === this.focusTargetId) {\n        // 重复点击，重置为玩家本人。\n        this.focusTargetId = this.playerId;\n      } else {\n        this.focusTargetId = targetId;\n      }\n      if (/^(?:1|true|yes|on|open|enabled|undefined)$/i.test(params?.syncFocusWS)) {\n        callOverlayHandler({\n          call: \"broadcast\",\n          source: \"castMonitorOverlay\",\n          msg: {\n            targetId: this.focusTargetId,\n          },\n        });\n      }\n    },\n    handleBroadcastMessage(e: { source: string; msg: any }): void {\n      if (e.source === \"castMonitorOverlay\" && e.msg.targetId) {\n        this.focusTargetId = e.msg.targetId;\n      }\n    },\n  },\n});\n","<script setup lang=\"ts\">\nimport { useCastingMonitorStore } from \"@/store/castingMonitor\";\nimport { params } from \"@/utils/queryParams\";\nconst castingMonitorStore = useCastingMonitorStore();\nconst displayAA = Number(/^(?:1|true|yes|on|open|enabled)$/i.test(params.displayAA));\nconst displayGCD = Number(/^(?:1|true|yes|on|open|enabled)$/i.test(params.displayGCDSpace));\n</script>\n\n<template>\n  <div w-100vw flex=\"~ nowrap\" class=\"main\">\n    <div v-for=\"(casts, castersId) in castingMonitorStore.castData\" :key=\"castersId\" :data-casterId=\"castersId\">\n      <el-tooltip\n        raw-content\n        placement=\"right-start\"\n        effect=\"dark\"\n        transition=\"\"\n        :teleported=\"false\"\n        popper-class=\"el-tooltip\"\n        :show-arrow=\"false\"\n        v-for=\"cast in casts\"\n        :key=\"cast.key\">\n        <template #content>\n          <div class=\"elhover\">\n            <strong>{{ cast.APIData.Name }}</strong>\n            <div v-html=\"cast.APIData?.Description\" style=\"white-space: pre-line\"></div>\n          </div>\n        </template>\n        <div\n          :class=\"`images ${cast.class} logLine${cast.logLine} displayAA${displayAA} displayGCD${displayGCD}`\"\n          :style=\"`--animeDuration: ${castingMonitorStore.config.duration}s;opacity:${Number(\n            castingMonitorStore.focusTargetId === castersId,\n          )}`\">\n          <img :src=\"cast.src\" class=\"action-icon\" height=\"40\" loading=\"lazy\" />\n          <img class=\"frame\" loading=\"lazy\" />\n          <span v-if=\"displayGCD === 1\" class=\"GCDCast\" :class=\"cast.GCDClass\">{{ cast?.GCDCast ?? \"\" }}</span>\n        </div>\n      </el-tooltip>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n@keyframes move {\n  from {\n    right: calc(0% - 24px);\n  }\n  to {\n    right: 100%;\n  }\n}\n::v-deep(.elhover) {\n  user-select: text;\n  line-height: 1.2em;\n  font-size: 12px;\n}\n.main {\n  position: relative;\n  min-height: 60px;\n  height: 100vh;\n  .images {\n    position: absolute;\n    bottom: 0px;\n    &.displayGCD1 {\n      bottom: 18px;\n    }\n    height: 48px;\n    right: calc(0% - 24px);\n    width: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    &.logLine14 {\n      filter: opacity(0.5);\n    }\n    &.logLine15,\n    &.logLine16 {\n      animation-name: move;\n      animation-duration: var(--animeDuration);\n      animation-timing-function: linear;\n      animation-fill-mode: forwards;\n    }\n    .action-icon {\n      z-index: 1;\n    }\n    .action-category-2,\n    .action-category-3,\n    .action-category-13,\n    .action-category-17 {\n      .action-icon {\n        z-index: 3;\n      }\n    }\n    .frame {\n      z-index: 2;\n    }\n    .action-category-2,\n    .action-category-3,\n    .action-category-13,\n    .action-category-17 {\n      .frame {\n        z-index: 4;\n      }\n    }\n    .frame {\n      position: absolute;\n      height: 48px;\n      width: 48px;\n      //src有值之前隐藏默认img灰色边框\n      opacity: 0;\n    }\n    &.action .frame,\n    &.mount .frame {\n      top: 1px;\n      content: url(@/assets/frame.png);\n      opacity: 1;\n    }\n    &.item .frame {\n      content: url(@/assets/item_icon_frame.png);\n      opacity: 1;\n    }\n    &.itemHQ .frame {\n      content: url(@/assets/item_icon_frame.png);\n      opacity: 1;\n    }\n    .action-icon {\n      position: absolute;\n    }\n  }\n\n  //自动攻击\n  .action-category-1 {\n    transform: scale(0.25);\n    transform-origin: top;\n    top: 0px;\n    &.displayAA0 {\n      display: none;\n    }\n  }\n  .GCDCast {\n    display: none;\n    z-index: 20;\n  }\n  //魔法 战技 特殊技能 弩炮\n  .action-category-2,\n  .action-category-3,\n  .action-category-13,\n  .action-category-17 {\n    transform: none;\n    .GCDCast {\n      display: inline-block;\n      color: whitesmoke;\n      font-family: monospace;\n      transform: translateY(30px);\n      text-shadow: -1px 0 1px #000, 0 1px 1px #000, 1px 0 1px #000, 0 -1px 1px #000;\n      font-size: 12px;\n      &.wasted {\n        color: yellow;\n      }\n    }\n  }\n\n  //能力 道具 采集能力 制作能力 任务 极限技 系统 系统 坐骑 道具操作 极限技 action的道具 action的道具HQ\n  .action-category-4,\n  .action-category-5,\n  .action-category-6,\n  .action-category-7,\n  .action-category-8,\n  .action-category-9,\n  .action-category-10,\n  .action-category-11,\n  .action-category-12,\n  .action-category-14,\n  .action-category-15,\n  .item,\n  .itemHQ {\n    transform: translateY(-15px) scale(0.8);\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { useCastingMonitorStore } from \"@/store/castingMonitor\";\nimport { params } from \"@/utils/queryParams\";\nimport Util from \"@/utils/util\";\nimport { getClassjobIconSrc } from \"@/utils/xivapi\";\nconst castingMonitorStore = useCastingMonitorStore();\nwatchEffect(() => {\n  castingMonitorStore.partyData.forEach(async (item) => {\n    item.src = await getClassjobIconSrc(item.job);\n  });\n});\nconst showHeader = /^(?:1|true|yes|on|open|enabled|undefined)$/i.test(params?.showHeader);\n</script>\n\n<template>\n  <div z-100 flex=\"~ gap0 wrap\" class=\"header-layout\" v-if=\"showHeader\">\n    <button\n      v-for=\"(item, index) in castingMonitorStore.partyDataFormatted\"\n      :key=\"index\"\n      @click=\"castingMonitorStore.handleClickChangeTarget(item.id)\"\n      class=\"job-lists\"\n      :class=\"castingMonitorStore.focusTargetId === item.id ? 'job-lists-focus' : ''\"\n      p-0\n      m-0\n    >\n      <div flex=\"~ nowrap items-end\" style=\"align-items: flex-end; gap: 0.1rem\">\n        <img :src=\"item.src\" style=\"height: 1.25em\" loading=\"lazy\"/>\n        {{ Util.nameToFullName(Util.jobEnumToJob(item.job as number)).simple2 }}\n      </div>\n    </button>\n  </div>\n</template>\n<stype lang=\"scss\" scoped>\n.header-layout {\n  padding: 0;\n  height: 0px;\n  z-index: 10;\n  .job-lists {\n    margin: 0;\n    padding: 0.25em 0.5em;\n    transition: all 0.3s ease-in-out;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n    color: white;\n    font-family: \"微软雅黑\";\n    text-shadow: -1px 0 2px #000, 0 1px 2px #000, 1px 0 2px #000, 0 -1px 2px #000;\n    &:hover {\n      transition-duration: 0.05s !important;\n      color: lightskyblue;\n    }\n    &:not(.job-lists-focus) {\n      transform: translateY(-35px);\n      opacity: 0;\n    }\n    &.job-lists-focus {\n      transform: translateY(-0px);\n      opacity: 0.75;\n      color: lightskyblue;\n    }\n  }\n}\n</stype>\n","<script setup lang=\"ts\">\nimport { useCastingMonitorStore } from \"@/store/castingMonitor\";\nconst castingMonitorStore = useCastingMonitorStore();\nconst dev = location.href.indexOf(\"localhost\") > -1;\nonMounted(() => {\n  addOverlayListener(\"ChangePrimaryPlayer\", castingMonitorStore.handleChangePrimaryPlayer);\n  addOverlayListener(\"LogLine\", castingMonitorStore.handleLogLine);\n  addOverlayListener(\"PartyChanged\", castingMonitorStore.handlePartyChanged);\n  addOverlayListener(\"BroadcastMessage\", castingMonitorStore.handleBroadcastMessage);\n  startOverlayEvents();\n});\nonBeforeUnmount(() => {\n  removeOverlayListener(\"ChangePrimaryPlayer\", castingMonitorStore.handleChangePrimaryPlayer);\n  removeOverlayListener(\"LogLine\", castingMonitorStore.handleLogLine);\n  removeOverlayListener(\"PartyChanged\", castingMonitorStore.handlePartyChanged);\n  removeOverlayListener(\"BroadcastMessage\", castingMonitorStore.handleBroadcastMessage);\n});\nconst show = ref(false);\nsetInterval(() => {\n  show.value = Date.now() - castingMonitorStore.lastPush < castingMonitorStore.config.duration * 2 * 1000;\n}, 1000);\n</script>\n\n<template>\n  <div class=\"common-layout\" v-show=\"show\">\n    <el-container items-center>\n      <el-header class=\"header-layout\">\n        <casting-monitor-header />\n      </el-header>\n      <el-main p-0>\n        <casting-monitor-main />\n      </el-main>\n    </el-container>\n    <footer v-if=\"dev\">\n      <el-button @click=\"castingMonitorStore.testParty(true)\">虚假小队</el-button>\n      <el-button @click=\"castingMonitorStore.testParty(false)\">单人</el-button>\n      <el-button @click=\"castingMonitorStore.testAction()\">Action</el-button>\n      <el-button @click=\"castingMonitorStore.testItem()\">Item</el-button>\n      <el-button @click=\"castingMonitorStore.testItemHQ()\">ItemHQ</el-button>\n    </footer>\n  </div>\n</template>\n<style lang=\"scss\">\n::-webkit-scrollbar {\n  display: none !important;\n}\n</style>\n<style lang=\"scss\" scoped>\n.common-layout {\n  user-select: none;\n  position: absolute;\n  left: 0;\n  top: 0;\n  background-color: rgba($color: #000000, $alpha: 0.2);\n}\n.common-layout :hover {\n  ::v-deep(.header-layout .job-lists) {\n    transform: translateY(0px);\n    opacity: 1;\n  }\n}\nfooter {\n  position: fixed;\n  bottom: 0%;\n  filter: opacity(0);\n  transition: filter 0.5s;\n  &:hover {\n    filter: none;\n  }\n}\n</style>\n"],"names":["THNSort","testActions","useCastingMonitorStore","defineStore","reactive","ref","_a","params","state","a","b","Util","actionId","fakeParty","time","logLine","abilityName","casterId","abilityId","cast1000Ms","energySaving","v","queryType","itemIsHQ","key","cast","action","parseAction","getFullImgSrc","lastCast","e","targetId","castingMonitorStore","displayAA","displayGCD","watchEffect","item","getClassjobIconSrc","showHeader","dev","onMounted","onBeforeUnmount","show"],"mappings":"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"}