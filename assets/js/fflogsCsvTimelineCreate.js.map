{"version":3,"file":"fflogsCsvTimelineCreate.js","sources":["../../../src/pages/fflogsCsvTimelineCreate.vue"],"sourcesContent":["<!-- <script setup lang=\"ts\">\nimport { getActionChinese } from \"@/resources/actionChinese\";\nimport {\n  FflogsjsonReport,\n  FflogsjsonCast,\n  FflogsjsonDamageTaken,\n  Fight,\n  Enemy,\n  Friendly,\n  // CastEvent,\n  TakenEvent,\n  AbilityDamageType,\n  AuraAbilities,\n} from \"@/types/fflogs2\";\nimport { keigennData, createIconUrl, Keigenn } from \"@/resources/keigenn\";\nimport { ElMessage, ElMessageBox } from \"element-plus\";\nimport moment from \"moment\";\nimport { VxeTablePropTypes } from \"vxe-table\";\n// import { getImgSrc } from \"@/utils/xivapi\";\ntype processedKeigenn = Omit<Keigenn, \"icon\"> & { icon: string };\nconst data = useStorage(\"fflogs-csv-timeline-create\", {\n  api_key: \"\",\n  url: \"\",\n  fight: undefined as Fight | undefined,\n  enemies: [] as Enemy[],\n  friendlies: [] as Friendly[],\n  enemiesIDs: [] as number[],\n  friendyIDs: [] as number[],\n  // castEvents: [] as CastEvent[],\n  takenEvents: [] as TakenEvent[],\n  auraAbilities: [] as AuraAbilities[],\n  auraAbilitiesIDs: [] as number[],\n  code: \"\" as string,\n  showCN: true as boolean,\n  filter: {\n    friendlyID: 0 as number,\n  },\n  tableData: [] as TakenEvent[],\n  keigenns: [] as processedKeigenn[],\n  uniqueBuffs: [] as number[],\n});\nconst buffIDs: Set<number> = new Set();\ndata.value.keigenns = keigennData.map((k) => {\n  return Object.assign(k, { icon: typeof k.icon === \"number\" ? createIconUrl(k.icon) : k.icon });\n});\nconst loading = ref(false);\nasync function startParse() {\n  loading.value = true;\n  let reg = data.value.url.match(/(?<=^|\\/)(?<code>[\\d\\w]{16,})\\/?#fight=(?<fight>\\d+|last)/);\n  if (data.value.api_key.length !== 32) {\n    ElMessageBox.alert(\"错误的 API key\");\n    return;\n  }\n  if (!reg) {\n    ElMessage.error(\"战斗记录输入有误\");\n    return;\n  }\n  data.value.code = reg.groups!.code;\n  await fetch(`https://cn.fflogs.com/v1/report/fights/${data.value.code}?api_key=${data.value.api_key}`)\n    .then((res) => res.json())\n    .then(async (res: FflogsjsonReport) => {\n      const fightIndex = (reg!.groups!.fight === \"last\" ? res.fights.length : parseInt(reg!.groups!.fight)) - 1;\n      data.value.fight = res.fights[fightIndex];\n      data.value.enemiesIDs = res.enemies.filter((enemy) => enemy.type === \"Boss\").map((boss) => boss.id);\n      data.value.enemies = res.enemies;\n      data.value.friendlies = res.friendlies.filter((v) => v.fights.find((f) => f.id === fightIndex));\n      data.value.friendyIDs = data.value.friendlies\n        .map((friendly) => friendly.id)\n        .filter((v) => res.friendlies.find((f) => f.id === v)?.type !== \"LimitBreak\");\n      // data.value.castEvents = []; //\n      data.value.takenEvents = [];\n      // data.value.auraAbilitiesIDs.length = 0;\n      buffIDs.clear();\n      data.value.auraAbilities = [];\n      await getEvents(\"taken\", data.value.fight.start_time, data.value.fight.end_time, 0);\n      data.value.takenEvents = data.value.takenEvents\n        .filter((v) => v.ability.name !== \"Combined DoTs\" && v.type === \"damage\")\n        .sort((a, b) => a.timestamp - b.timestamp);\n      // data.value.castEvents.sort((a, b) => a.timestamp - b.timestamp);\n      // data.value.auraAbilitiesIDs = [...new Set(data.value.auraAbilitiesIDs)];\n      data.value.auraAbilitiesIDs = [...buffIDs]\n        .sort((a, b) => {\n          return (\n            keigennData.findIndex((v) => v.id === b - 1000000) - keigennData.findIndex((v) => v.id === a - 1000000)\n          );\n        })\n        .reverse();\n      // data.value.auraAbilitiesIDs = data.value.auraAbilitiesIDs.sort(\n      //   (a, b) =>\n      //     keigennData.findIndex((v) => v.id === a - 1000000) - keigennData.findIndex((v) => v.id === b - 1000000),\n      // );\n      data.value.uniqueBuffs = Array.from(\n        new Set(\n          data.value.takenEvents\n            .map((v) => v.buffs?.split(\".\"))\n            .flat()\n            .map((v) => Number(v))\n            .filter((v) => v),\n        ),\n      );\n      //   .filter((v) => getKeigenn(v - 1000000))\n      //   .sort(\n      //     (a, b) =>\n      //       keigennArr.findIndex((f) => f.id === a - 1000000) - keigennArr.findIndex((f) => f.id === b - 1000000),\n      //   )\n      //   .map((v) => ({ id: v, url: getSrc(v), title: getTitle(v) }));\n      data.value.filter.friendlyID = data.value.friendyIDs?.[0] ?? 0;\n      updateTableData();\n    })\n    .catch((e) => {\n      ElMessageBox.alert(e);\n    });\n  loading.value = false;\n}\nasync function getEvents(type: \"casts\" | \"taken\", start: number, end: number, index: number) {\n  if (index >= 0) {\n    await fetch(\n      type === \"casts\"\n        ? `https://cn.fflogs.com/v1/report/events/casts/${data.value.code}?start=${start}&end=${end}&hostility=1&sourceid=${data.value.enemiesIDs[index]}&api_key=${data.value.api_key}`\n        : `https://cn.fflogs.com/v1/report/events/damage-taken/${data.value.code}?start=${start}&end=${end}&hostility=0&sourceid=${data.value.friendyIDs[index]}&api_key=${data.value.api_key}`,\n    )\n      .then((res) => res.json())\n      .then(async (result) => {\n        let res;\n        if (type === \"casts\") res = result as FflogsjsonCast;\n        else if (type === \"taken\") res = result as FflogsjsonDamageTaken;\n        else throw new Error(\"Invalid event type: \" + type);\n        if (!res.events) throw new Error(\"result has no events\");\n        if (type === \"taken\") {\n          data.value.takenEvents.push(...(res.events as TakenEvent[]));\n          data.value.auraAbilities.push(...res.auraAbilities);\n          res.auraAbilities.map((v) =>\n            // data.value.auraAbilitiesIDs.findIndex((a) => a === v.guid) === -1\n            //   ? data.value.auraAbilitiesIDs.push(v.guid)\n            //   : \"\",\n            buffIDs.add(v.guid),\n          );\n        }\n        // else if (type === \"casts\") data.value.castEvents.push(...(res.events as CastEvent[]));\n        if (res?.nextPageTimestamp && res?.nextPageTimestamp > 0 && res.nextPageTimestamp < end)\n          await getEvents(type, res.nextPageTimestamp, end, index);\n        if (type === \"casts\" && index < data.value.enemiesIDs.length - 1) await getEvents(type, start, end, index + 1);\n        if (type === \"taken\" && index < data.value.friendyIDs.length - 1) await getEvents(type, start, end, index + 1);\n      });\n  }\n}\nconst formatTableTime = (time: string) =>\n  moment.utc(Number(time) - (data.value.fight?.start_time ?? 0)).format(\"mm:ss.S\");\n// const getSourceName = (id: number) => data.value?.enemies.find((v) => v.id === id)?.name ?? id.toString();\n// const filterTable = (value: string, row: any) => row.type === value;\n// const takenFilter = computed(() => {\n//   if (data.value.takenEvents.length > 0) {\n//     const sourceIDs = Array.from(new Set(data.value.takenEvents.map((v) => v.sourceID))).filter((v) => v);\n//     return sourceIDs.map((v) => {\n//       return { text: getSourceName(v), value: v.toString() };\n//     });\n//   }\n//   return [];\n// });\nconst toCN = (id: number): string | undefined => getActionChinese(id);\nconst getAbilityType = (type: AbilityDamageType): any => AbilityDamageType[type] ?? \"未知\";\nconst getSrc = (guid: number): string => {\n  const ability = data.value.auraAbilities.find((v) => v.guid === guid);\n  if (!ability) return \"\";\n  return \"https://cafemaker.wakingsands.com/i/\" + ability.abilityIcon.replace(\"-\", \"/\");\n};\nconst getTitle = (guid: number): string => data.value.auraAbilities.find((v) => v.guid === guid)?.name ?? \"\";\nfunction updateTableData() {\n  data.value.tableData = data.value.takenEvents.filter((v) => v.targetID == data.value.filter.friendlyID);\n}\nconst rowClassName: VxeTablePropTypes.RowClassName = ({ row }) => {\n  return \"row-type-\" + row.type;\n};\n</script> -->\n\n<!-- <template>\n  <el-container>\n    <el-main p-t-0>\n      <el-form>\n        <el-form-item>\n          <el-row :gutter=\"5\" style=\"width: 100%\">\n            <el-col :span=\"6\">\n              <el-form-item label=\"API KEY\">\n                <el-input v-model=\"data.api_key\" type=\"password\" placeholder=\"\" show-password />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"FIGHT CODE\">\n                <el-input v-model=\"data.url\" type=\"text\" placeholder=\"\" />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-button type=\"primary\" @click=\"startParse\" :loading=\"loading\">开始分析</el-button>\n            </el-col>\n          </el-row>\n          <el-col p-t-3\n            >视角：\n            <vxe-radio-group v-model=\"data.filter.friendlyID\" @change=\"updateTableData\">\n              <vxe-radio-button\n                v-for=\"i in data.friendyIDs\"\n                :label=\"i\"\n                :content=\"data.friendlies.find((f) => f.id === i)?.icon\"\n              ></vxe-radio-button>\n            </vxe-radio-group>\n          </el-col>\n        </el-form-item>\n      </el-form>\n      <vxe-table\n        size=\"small\"\n        border\n        :loading=\"loading\"\n        class=\"mytable-scrollbar\"\n        height=\"720\"\n        align=\"center\"\n        show-header-overflow=\"tooltip\"\n        :show-overflow=\"true\"\n        :scroll-x=\"{ enabled: true, oSize: 15 }\"\n        :scroll-y=\"{ enabled: true, oSize: 15, mode: 'wheel' }\"\n        :data=\"data.tableData\"\n        :row-config=\"{ isHover: false, height: 25 }\"\n        :row-class-name=\"rowClassName\"\n      >\n        <vxe-column title=\"时间\" width=\"65\" fixed=\"left\">\n          <template #default=\"{ row }\">\n            <span> {{ formatTableTime(row.timestamp) }}</span>\n          </template>\n        </vxe-column>\n        <vxe-column fixed=\"left\" width=\"140\">\n          <template #header>\n            <el-switch v-model=\"data.showCN\" inactive-text=\"原\" active-text=\"汉\" size=\"small\" />\n          </template>\n          <template #default=\"{ row }\">\n            <span :class=\"'ability-type-' + row.ability.type\">\n              {{ data.showCN ? toCN(Number(row.ability.guid)) || row.ability.name : row.ability.name }}\n            </span>\n          </template>\n        </vxe-column>\n        <vxe-column title=\"类型\" width=\"60\">\n          <template #default=\"{ row }\">\n            {{ getAbilityType(row.ability.type) }}\n          </template>\n        </vxe-column>\n        <vxe-column title=\"伤害值\" width=\"80\">\n          <template #default=\"{ row }\">\n            {{ row.unmitigatedAmount?.toLocaleString() ?? \"-\" }}\n          </template>\n        </vxe-column>\n        <vxe-column field=\"multiplier\" title=\"减伤\" width=\"50\" />\n        <vxe-column field=\"absorbed\" title=\"护盾\" width=\"60\" />\n        <vxe-column field=\"amount\" title=\"实际\" width=\"80\" />\n        <vxe-column v-for=\"id in data.auraAbilitiesIDs\" :key=\"id\" :width=\"24 * 1\" :show-overflow=\"false\">\n          <template #header>\n            <div style=\"overflow: hidden; z-index: 1; position: absolute; left: 0px; top: 4px\">\n              <img\n                :src=\"getSrc(id)\"\n                :title=\"getTitle(id)\"\n                :onerror=\"`javascript:this.src=this.src.replace('cafemaker.wakingsands','xivapi');this.onerror=null;`\"\n                loading=\"lazy\"\n              />\n            </div>\n          </template>\n          <template #default=\"{ row }\">\n            <span class=\"noWrap\" style=\"position: absolute; left: 5px; top: 0px\">\n              {{ row?.buffs?.split(\".\").flat().includes(id) ? \"√\" : \"\" }}\n            </span>\n          </template>\n        </vxe-column>\n      </vxe-table>\n    </el-main>\n  </el-container>\n</template> -->\n<!-- <style lang=\"scss\">\n.noWrap {\n  white-space: nowrap;\n  overflow: hidden;\n}\n.ability-type-32 {\n  color: orchid;\n}\n.ability-type-64 {\n  color: orange;\n}\n.ability-type-128 {\n  color: #a60f22;\n}\n.ability-type-1024 {\n  color: #0187fb;\n}\n.row-type-calculateddamage {\n  background-color: lightcyan;\n}\n.row-type-damage {\n  background-color: inherit;\n}\n.mytable-scrollbar ::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n/*滚动条的轨道*/\n.mytable-scrollbar ::-webkit-scrollbar-track {\n  background-color: #ffffff;\n}\n/*滚动条里面的小方块，能向上向下移动*/\n.mytable-scrollbar ::-webkit-scrollbar-thumb {\n  background-color: #bfbfbf;\n  border-radius: 4px;\n  border: 1px solid #f1f1f1;\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n}\n.mytable-scrollbar ::-webkit-scrollbar-thumb:hover {\n  background-color: #a8a8a8;\n}\n.mytable-scrollbar ::-webkit-scrollbar-thumb:active {\n  background-color: #787878;\n}\n/*边角，即两个滚动条的交汇处*/\n.mytable-scrollbar ::-webkit-scrollbar-corner {\n  background-color: #ffffff;\n}\n</style> -->\n\n<script setup lang=\"ts\">\nimport { getActionChinese } from \"@/resources/actionChinese\";\nimport {\n  FflogsjsonReport,\n  FflogsjsonCast,\n  FflogsjsonDamageTaken,\n  Fight,\n  Enemy,\n  Friendly,\n  // CastEvent,\n  TakenEvent,\n  AbilityDamageType,\n  // AuraAbilities,\n} from \"@/types/fflogs2\";\nimport { keigennData, createIconUrl, Keigenn } from \"@/resources/keigenn\";\nimport { ElMessage, ElMessageBox } from \"element-plus\";\nimport moment from \"moment\";\nimport { VxeTablePropTypes } from \"vxe-table\";\nimport { getFullImgSrc } from \"@/utils/xivapi\";\ntype processedKeigenn = Omit<Keigenn, \"icon\"> & { icon: string };\nconst data = useStorage(\"fflogs-csv-timeline-create\", {\n  api_key: \"\",\n  url: \"\",\n  code: \"\" as string,\n});\nconst data2 = reactive({\n  fight: undefined as Fight | undefined,\n  enemies: [] as Enemy[],\n  friendlies: [] as Friendly[],\n  enemiesIDs: [] as number[],\n  friendyIDs: [] as number[],\n  // castEvents: [] as CastEvent[],\n  takenEvents: [] as TakenEvent[],\n  // auraAbilities: [] as AuraAbilities[],\n  showCN: true as boolean,\n  // uniqueBuffs: [] as { id: number; url: string; title: string }[],\n  filter: {\n    friendlyID: 0 as number,\n  },\n  tableData: [] as TakenEvent[],\n  keigenns: [] as processedKeigenn[],\n});\n// data.value.keigenns = keigennData.map((k) => Object.assign(k, { icon: createIconUrl(k.icon) }));\nconst loading = ref(false);\nasync function startParse() {\n  loading.value = true;\n  let reg = data.value.url.match(/(?<=^|\\/)(?<code>[\\d\\w]{16,})\\/?#fight=(?<fight>\\d+|last)/);\n  if (data.value.api_key.length !== 32) {\n    ElMessageBox.alert(\"错误的 API key\");\n    return;\n  }\n  if (!reg) {\n    ElMessage.error(\"战斗记录输入有误\");\n    return;\n  }\n  data.value.code = reg.groups!.code;\n  await fetch(`https://cn.fflogs.com/v1/report/fights/${data.value.code}?api_key=${data.value.api_key}`)\n    .then((res) => res.json())\n    .then(async (res: FflogsjsonReport) => {\n      const fightIndex = (reg!.groups!.fight === \"last\" ? res.fights.length : parseInt(reg!.groups!.fight)) - 1;\n      data2.fight = res.fights[fightIndex];\n      data2.enemiesIDs = res.enemies.filter((enemy) => enemy.type === \"Boss\").map((boss) => boss.id);\n      data2.enemies = res.enemies;\n      data2.friendlies = res.friendlies.filter((v) => v.fights.find((f) => f.id === fightIndex));\n      data2.friendyIDs = data2.friendlies\n        .map((f) => f.id)\n        .filter((v) => res.friendlies.find((f) => f.id === v)?.type !== \"LimitBreak\");\n      // data.value.castEvents = []; //\n      data2.takenEvents = [];\n      // data2.auraAbilities = [];\n      await getEvents(data2.fight.start_time, data2.fight.end_time, 0);\n      data2.takenEvents = data2.takenEvents\n        .filter((v) => v.ability.name !== \"Combined DoTs\" && v.type === \"damage\")\n        .sort((a, b) => a.timestamp - b.timestamp);\n      // data.value.castEvents.sort((a, b) => a.timestamp - b.timestamp);\n      // data.value.auraAbilities = Array.from(new Set(data.value.auraAbilities));\n      // data.value.uniqueBuffs = Array.from(\n      //   new Set(\n      //     data.value.takenEvents\n      //       .map((v) => v.buffs?.split(\".\"))\n      //       .flat()\n      //       .map((v) => Number(v))\n      //       .filter((v) => v),\n      //   ),\n      // )\n      //   .filter((v) => getKeigenn(v - 1000000))\n      //   .sort(\n      //     (a, b) =>\n      //       keigennArr.findIndex((f) => f.id === a - 1000000) - keigennArr.findIndex((f) => f.id === b - 1000000),\n      //   )\n      //   .map((v) => ({ id: v, url: getSrc(v), title: getTitle(v) }));\n      data2.filter.friendlyID = data2.friendyIDs?.[0] ?? 0;\n      // updateTableData();\n    })\n    .catch((e) => {\n      ElMessageBox.alert(e);\n    });\n  loading.value = false;\n}\nasync function getEvents(start: number, end: number, index: number) {\n  if (index >= 0) {\n    await fetch(\n      `https://cn.fflogs.com/v1/report/events/damage-taken/${data.value.code}?start=${start}&end=${end}&hostility=0&sourceid=${data2.friendyIDs[index]}&api_key=${data.value.api_key}`,\n    )\n      .then((res) => res.json())\n      .then(async (result) => {\n        let res: FflogsjsonDamageTaken = result;\n        data2.takenEvents.push(...(res.events as TakenEvent[]));\n        if (res?.nextPageTimestamp && res?.nextPageTimestamp > 0 && res.nextPageTimestamp < end)\n          await getEvents(res.nextPageTimestamp, end, index);\n        if (index < data2.friendyIDs.length - 1) await getEvents(start, end, index + 1);\n      });\n  }\n}\nconst formatTableTime = (time: string) => moment.utc(Number(time) - (data2.fight?.start_time ?? 0)).format(\"mm:ss.S\");\n// const getSourceName = (id: number) => data.value?.enemies.find((v) => v.id === id)?.name ?? id.toString();\n// const filterTable = (value: string, row: any) => row.type === value;\n// const takenFilter = computed(() => {\n//   if (data.value.takenEvents.length > 0) {\n//     const sourceIDs = Array.from(new Set(data.value.takenEvents.map((v) => v.sourceID))).filter((v) => v);\n//     return sourceIDs.map((v) => {\n//       return { text: getSourceName(v), value: v.toString() };\n//     });\n//   }\n//   return [];\n// });\n// const toCN = (id: number): string | undefined => {\n//   return getActionChinese(id);\n// };\n// const getAbilityType = (type: AbilityDamageType): any => AbilityDamageType[type] ?? \"未知\";\n// const getSrc = (guid: number): string => {\n//   const ability = data.value.auraAbilities.find((v) => v.guid === guid);\n//   if (!ability) return \"\";\n//   return \"http://cafemaker.wakingsands.com/i/\" + ability.abilityIcon.replace(\"-\", \"/\");\n// };\n// const getTitle = (guid: number): string => data.value.auraAbilities.find((v) => v.guid === guid)?.name ?? \"\";\n// function updateTableData() {\n//   data.value.tableData = data.value.takenEvents.filter((v) => v.targetID == data.value.filter.friendlyID);\n// }\n// const rowClassName: VxeTablePropTypes.RowClassName = ({ row }) => {\n//   return \"row-type-\" + row.type;\n// };\n</script>\n\n<template>\n  <el-container>\n    <el-main p-t-0>\n      <el-form>\n        <el-form-item>\n          <el-row :gutter=\"5\" style=\"width: 100%\">\n            <el-col :span=\"6\">\n              <el-form-item label=\"API KEY\">\n                <el-input v-model=\"data.api_key\" type=\"password\" placeholder=\"\" show-password />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"FIGHT CODE\">\n                <el-input v-model=\"data.url\" type=\"text\" placeholder=\"\" />\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-button type=\"primary\" @click=\"startParse\" :loading=\"loading\">开始分析</el-button>\n            </el-col>\n          </el-row>\n          <!-- <el-col p-t-3\n            >视角：\n            <vxe-radio-group v-model=\"data.filter.friendlyID\" @change=\"updateTableData\">\n              <vxe-radio-button\n                v-for=\"i in data.friendyIDs\"\n                :label=\"i\"\n                :content=\"data.friendlies.find((f) => f.id === i)?.icon\"\n              ></vxe-radio-button>\n            </vxe-radio-group>\n          </el-col> -->\n        </el-form-item>\n      </el-form>\n      <!-- <vxe-table\n        size=\"small\"\n        border\n        :loading=\"loading\"\n        class=\"mytable-scrollbar\"\n        height=\"720\"\n        align=\"center\"\n        show-header-overflow=\"tooltip\"\n        :show-overflow=\"true\"\n        :scroll-x=\"{ enabled: true, oSize: 15 }\"\n        :scroll-y=\"{ enabled: true, oSize: 15, mode: 'wheel' }\"\n        :data=\"data.tableData\"\n        :row-config=\"{ isHover: false, height: 25 }\"\n        :row-class-name=\"rowClassName\"\n      >\n        <vxe-column title=\"时间\" width=\"65\" fixed=\"left\">\n          <template #default=\"{ row }\">\n            <span> {{ formatTableTime(row.timestamp) }}</span>\n          </template>\n        </vxe-column>\n      </vxe-table> -->\n    </el-main>\n  </el-container>\n</template>\n<style lang=\"scss\">\n.noWrap {\n  white-space: nowrap;\n  overflow: hidden;\n}\n.ability-type-32 {\n  color: orchid;\n}\n.ability-type-64 {\n  color: orange;\n}\n.ability-type-128 {\n  color: #a60f22;\n}\n.ability-type-1024 {\n  color: #0187fb;\n}\n.row-type-calculateddamage {\n  background-color: lightcyan;\n}\n.row-type-damage {\n  background-color: inherit;\n}\n.mytable-scrollbar ::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n/*滚动条的轨道*/\n.mytable-scrollbar ::-webkit-scrollbar-track {\n  background-color: #ffffff;\n}\n/*滚动条里面的小方块，能向上向下移动*/\n.mytable-scrollbar ::-webkit-scrollbar-thumb {\n  background-color: #bfbfbf;\n  border-radius: 4px;\n  border: 1px solid #f1f1f1;\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n}\n.mytable-scrollbar ::-webkit-scrollbar-thumb:hover {\n  background-color: #a8a8a8;\n}\n.mytable-scrollbar ::-webkit-scrollbar-thumb:active {\n  background-color: #787878;\n}\n/*边角，即两个滚动条的交汇处*/\n.mytable-scrollbar ::-webkit-scrollbar-corner {\n  background-color: #ffffff;\n}\n</style>\n"],"names":["data","useStorage","data2","reactive","loading","ref","startParse","reg","ElMessageBox","ElMessage","res","fightIndex","enemy","boss","v","f","_a","getEvents","a","b","e","start","end","index","result"],"mappings":"6aAqVA,MAAAA,EAAAC,EAAA,6BAAA,CAAsD,QAAA,GAC3C,IAAA,GACJ,KAAA,EACC,CAAA,EAERC,EAAAC,EAAA,CAAuB,MAAA,OACd,QAAA,CAAA,EACG,WAAA,CAAA,EACG,WAAA,CAAA,EACA,WAAA,CAAA,EACA,YAAA,CAAA,EAEC,OAAA,GAEN,OAAA,CAEA,WAAA,CACM,EACd,UAAA,CAAA,EACY,SAAA,CAAA,CACD,CAAA,EAGbC,EAAAC,EAAA,EAAA,EACA,eAAAC,GAAA,CACEF,EAAA,MAAA,GACA,IAAAG,EAAAP,EAAA,MAAA,IAAA,MAAA,WAAA,gEAAA,GACA,GAAAA,EAAA,MAAA,QAAA,SAAA,GAAA,CACEQ,EAAA,MAAA,aAAA,EACA,OAEF,GAAA,CAAAD,EAAA,CACEE,EAAA,MAAA,UAAA,EACA,OAEFT,EAAA,MAAA,KAAAO,EAAA,OAAA,KACA,MAAA,MAAA,0CAAAP,EAAA,MAAA,gBAAAA,EAAA,MAAA,SAAA,EAAA,KAAAU,GAAAA,EAAA,MAAA,EAAA,KAAA,MAAAA,GAAA,OAGI,MAAAC,GAAAJ,EAAA,OAAA,QAAA,OAAAG,EAAA,OAAA,OAAA,SAAAH,EAAA,OAAA,KAAA,GAAA,EACAL,EAAA,MAAAQ,EAAA,OAAAC,CAAA,EACAT,EAAA,WAAAQ,EAAA,QAAA,OAAAE,GAAAA,EAAA,OAAA,MAAA,EAAA,IAAAC,GAAAA,EAAA,EAAA,EACAX,EAAA,QAAAQ,EAAA,QACAR,EAAA,WAAAQ,EAAA,WAAA,OAAAI,GAAAA,EAAA,OAAA,KAAA,GAAA,EAAA,KAAAH,CAAA,CAAA,EACAT,EAAA,WAAAA,EAAA,WAAA,IAAAa,GAAAA,EAAA,EAAA,EAAA,OAAAD,GAAA,OAAA,QAAAE,EAAAN,EAAA,WAAA,KAAAK,GAAAA,EAAA,KAAAD,CAAA,IAAA,YAAAE,EAAA,QAAA,aAAA,EAIAd,EAAA,YAAA,GAEA,MAAAe,EAAAf,EAAA,MAAA,WAAAA,EAAA,MAAA,SAAA,CAAA,EACAA,EAAA,YAAAA,EAAA,YAAA,OAAAY,GAAAA,EAAA,QAAA,OAAA,iBAAAA,EAAA,OAAA,QAAA,EAAA,KAAA,CAAAI,EAAAC,IAAAD,EAAA,UAAAC,EAAA,SAAA,EAoBAjB,EAAA,OAAA,aAAAc,EAAAd,EAAA,aAAA,YAAAc,EAAA,KAAA,CAAmD,CAAA,EAAA,MAAAI,GAAA,CAInDZ,EAAA,MAAAY,CAAA,CAAoB,CAAA,EAExBhB,EAAA,MAAA,EAAgB,CAElB,eAAAa,EAAAI,EAAAC,EAAAC,EAAA,CACEA,GAAA,GACE,MAAA,MAAM,uDAAAvB,EAAA,MAAA,cAAAqB,SAAAC,0BAAApB,EAAA,WAAAqB,CAAA,aAAAvB,EAAA,MAAA,SACmK,EAAA,KAAAU,GAAAA,EAAA,KAAA,CAAA,EAAA,KAAA,MAAAc,GAAA,CAIrK,IAAAd,EAAAc,EACAtB,EAAA,YAAA,KAAA,GAAAQ,EAAA,MAAA,EACAA,GAAA,MAAAA,EAAA,oBAAAA,GAAA,YAAAA,EAAA,mBAAA,GAAAA,EAAA,kBAAAY,GACE,MAAAL,EAAAP,EAAA,kBAAAY,EAAAC,CAAA,EACFA,EAAArB,EAAA,WAAA,OAAA,GAAyC,MAAAe,EAAAI,EAAAC,EAAAC,EAAA,CAAA,CAAqC,CAAA,CAEpF"}